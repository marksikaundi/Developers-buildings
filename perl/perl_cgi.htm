<!DOCTYPE html>
<html lang="en-US">
<head>
<title>PERL and CGI Tutorial</title>
<meta charset="utf-8">
<meta name="description" content="PERL and CGI Tutorial,  The Common Gateway Interface, or CGI, is a set of standards that define how information is exchanged between the web server and a custom script."/>
<link rel="canonical" href="https://www.tutorialspoint.com/perl/perl_cgi.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;700&family=Roboto:wght@400;500;700&display=swap">
<link id="style-switch" rel="stylesheet" href="/static/css/purge/style-min.css?v=5.11">
<link rel="stylesheet" href="/static/css/custom.css?v=7.40213">
<style>.navbar-expand-xl .navbar-brand .navbar-brand-item, .h-100px, ul.toc li.heading, .light-mode-item, .dark-mode-item, .back-top, a.demo, .home-intro-sub{background:#43C2C8; color:#fff;}  ul.toc li.heading:hover{background:#43C2C8;} .btn-grey-border{background:#43C2C8; color:#fff; border:1px solid #43C2C8;} .course-box{background:#43C2C8;} 
</style>
<script id="adp1" data-cfasync="false">(function(w, d) { var s = d.createElement('script'); s.src = '//cdn.adpushup.com/40046/adpushup.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<script id="adp2" data-cfasync="false">(function(w, d) {var s = d.createElement('script'); s.src = '//delivery.adrecover.com/18107/adRecover.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
</head>
<body>
<div class="navbar-top navbar-dark d-xl-block py-2 mx-2 mx-md-4 rounded-bottom-4">
	<div class="container-fluid px-3 px-xl-0">
		<div class="d-lg-flex justify-content-lg-between align-items-center top-nav-links">
			<ul class="nav align-items-center justify-content-center">
				<li class="nav-item" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Home Page">
					<a class="nav-link" href="https://www.tutorialspoint.com/index.htm"><i class="fal fa-home-alt me-1"></i> Home</a>
				</li>
				<li class="nav-item" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Online Coding System">
					<a class="nav-link" href="https://www.tutorialspoint.com/codingground.htm"><i class="fal fa-code me-1"></i> Coding Ground</a>
				</li>
				<li class="nav-item" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Job Openings">
					<span><a class="nav-link" href="https://www.tutorialspoint.com/about/about_careers.htm"><i class="fal fa-suitcase me-1"></i> Jobs</a></span>
				</li>
				<li class="nav-item" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Digital Whiteboard">
					<span><a class="nav-link" href="https://www.tutorialspoint.com/whiteboard.htm"><i class="fal fa-chalkboard me-1"></i> Whiteboard</a></span>
				</li>
				<li class="nav-item" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Developer's Tools">
					<span><a class="nav-link" href="https://www.tutorialspoint.com/online_dev_tools.htm"><i class="fal fa-tools me-1"></i> Tools</a></span>
				</li>
				<li class="nav-item" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Corporate Trainings">
					<span><a class="nav-link" href="https://www.tutorialspoint.com/business/index.asp"><i class="fal fa-analytics me-1"></i> Business</a></span>
				</li>
			</ul>
			<!-- Navbar top Right-->
			<div class="d-flex align-items-center justify-content-center">
				<div class="navbar-nav ms-2">
				  <div class="modeswitch-wrap" id="darkModeSwitch">
					 <div class="modeswitch-item">
						<div class="modeswitch-icon">
							<i class="fal fa-sun toggle-sun"></i>
							<i class="fal fa-moon toggle-moon"></i>
						</div>
					 </div>
				  </div>
				</div>
				<div class="me-3c top-nav-social">
				  <a class="nav-link" href="https://www.tutorialspoint.com/market/teach_with_us.jsp" target="_self"  data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Teach with us"><i class="fal fa-users-class me-2"></i> <span>Teach with us</span></a>
				</div>
				<ul class="list-unstyled d-flex mb-0 top-nav-social">
					<li><a class="px-2 nav-link" rel="nofollow" href="https://www.facebook.com/tutorialspointindia" target="_blank"   data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Tutorialspoint Facebook"><i class="fab fa-facebook"></i></a> </li>
					<li><a class="px-2 nav-link" rel="nofollow" href="https://www.instagram.com/tutorialspoint_/" target="_blank" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Tutorialspoint Instagram"><i class="fab fa-instagram"></i></a> </li>
					<li><a class="px-2 nav-link" rel="nofollow" href="https://twitter.com/tutorialspoint" target="_blank" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Tutorialspoint Twitter"><i class="fab fa-twitter"></i></a> </li>
					<li><a class="px-2 nav-link" rel="nofollow" href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Tutorialspoint Youtube"><i class="fab fa-youtube"></i></a> </li>
					<li><a class="px-2 nav-link" rel="nofollow" href="https://www.linkedin.com/authwall?trk=bf&trkInfo=AQEkqX2eckF__gAAAX-wMwEYvrsjBVbEtWQd4pgEdVSzkL22Nik1KEpY_ECWLKDGc41z8IOZWr2Bb0fvJplT60NPBtSw87J6QCpc7wD4qQ3iU13n6xJtBxME5o05Wmpg5JPm5YY=&originalReferer=&sessionRedirect=https%3A%2F%2Fwww.linkedin.com%2Fcompany%2Ftutorialspoint" target="_blank"  data-bs-toggle="tooltip" data-bs-animation="false" data-bs-placement="bottom" data-bs-original-title="Tutorialspoint LinkedIn"><i class="fab fa-linkedin-in"></i></a> </li>
				</ul>
			</div>
		</div>
	</div>
</div>

<header class="navbar-light navbar-sticky header-static">
	<nav class="navbar navbar-expand-xl">
		<div class="container-fluid px-3 px-xl-4">
			<a class="navbar-brand" href="https://www.tutorialspoint.com/index.htm"><img class="light-mode-item navbar-brand-item" src="/static/images/logo-color.png" alt="logo" /> <img class="dark-mode-item navbar-brand-item" src="/static/images/logo-color-b.png" alt="logo" /></a>
			<button class="navbar-toggler-toc collapsed ms-auto-toc" type="button"  id="btn-tutorial-toc">
                        <span><i class="fal fa-th-list"></i></span>
			</button>
			<button class="navbar-toggler ms-auto" type="button" id="btn-menu-collapse">
				<span class="navbar-toggler-animation">
					<span></span>
					<span></span>
					<span></span>
				</span>
			</button>
			<div class="navbar-collapse w-100 collapse" id="navbarCollapse">
				<ul class="navbar-nav navbar-nav-scroll me-auto">
					<li class="nav-item nav-xs-login">
						<a class="nav-link" href="#"><i class="fal fa-sign-in-alt me-2"></i>Login</a>
					</li>
					<li class="nav-item dropdown dropdown-menu-shadow-stacked">
						<a class="nav-link" id="categoryMenu" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
							<i class="fal fa-th-list fs-5 me-xl-1 d-xl-none"></i>
							<i class="fal fa-th me-1 d-none d-xl-inline-block"></i>
							<span class="d-xl-inline-block">Category <i class="fal fa-angle-down"></i></span>
						</a>
												<ul class="dropdown-menu categories-menu shadow" id="categories-menu">
							<li><a href="/academic_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Academic Tutorials</a></li>
							<li><a href="/big_data_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Big Data &amp; Analytics </a></li>
							<li><a href="/computer_programming_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Computer Programming </a></li>
							<li><a href="/computer_science_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Computer Science </a></li>
							<li><a href="/database_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Databases </a></li>
							<li><a href="/devops_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> DevOps </a></li>
							<li><a href="/digital_marketing_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Digital Marketing </a></li>
							<li><a href="/engineering_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Engineering Tutorials </a></li>
							<li><a href="/upsc_ias_exams.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Exams Syllabus </a></li>
							<li><a href="/famous_monuments.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Famous Monuments </a></li>
							<li><a href="/gate_exams_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> GATE Exams </a></li>
							<li><a href="/latest_technologies.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Latest Technologies </a></li>
							<li><a href="/machine_learning_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Machine Learning </a></li>
							<li><a href="/mainframe_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Mainframe Development </a></li>
							<li><a href="/management_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Management Tutorials </a></li>
							<li><a href="/maths_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Mathematics Tutorials</a></li>
							<li><a href="/microsoft_technologies_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Microsoft Technologies </a></li>
							<li><a href="/misc_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Misc tutorials </a></li>
							<li><a href="/mobile_development_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Mobile Development </a></li>
							<li><a href="/java_technology_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Java Technologies </a></li>
							<li><a href="/python_technologies_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Python Technologies </a></li>
							<li><a href="/sap_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> SAP Tutorials </a></li>
							<li><a href="/scripting_lnaguage_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Programming Scripts </a></li>
							<li><a href="/selected_reading.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Selected Reading </a></li>
							<li><a href="/software_quality_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Software Quality </a></li>
							<li><a href="/soft_skill_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Soft Skills </a></li>
							<li><a href="/telecom_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Telecom Tutorials </a></li>
							<li><a href="/upsc_ias_exams.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> UPSC IAS Exams </a></li>
							<li><a href="/web_development_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Web Development </a></li>
							<li><a href="/sports_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Sports Tutorials </a></li>
							<li><a href="/xml_technologies_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> XML Technologies </a></li>
							<li><a href="/multi_language_tutorials.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Multi-Language</a></li>
							<li><a href="/questions_and_answers.htm" class="dropdown-item"><i class="fal fa-angle-right"></i> Interview Questions</a></li>
						</ul>
											</li>
				</ul>
				<div class="navbar-collapse">
					<div class="col-xl-9">
						<div class="nav my-3 my-xl-0 px-4 flex-nowrap align-items-center">
							<div class="nav-item w-100">
								<form class="rounded position-relative">
									<input class="form-control pe-4 bg-secondary bg-opacity-10 border-0 search-strings" type="search" placeholder="Search tutorials ..." id="search-strings" name="key" data-result="search-results" aria-label="Search">
									<button type="button" id="btnSearch" class="btn bg-transparent px-2 py-0 position-absolute top-50 end-0 translate-middle-y"><i class="fal fa-search fs-6"></i></button>
									<div class="search-box search-box-inn" id="search-results"></div>
									<div class="clear"></div>
								</form>
							</div>
						</div>
					</div>
				</div>
				<ul class="navbar-nav navbar-nav-scroll">
					<li class="nav-item">
						<a class="nav-link" href="https://www.tutorialspoint.com/latest/prime-packs" target="_self"><i class="fal fa-cubes me-1"></i>Prime Packs</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="https://www.tutorialspoint.com/market/index.asp" target="_self"><i class="fal fa-play-circle me-1"></i>Courses</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="https://www.tutorialspoint.com/latest/ebooks" target="_self"><i class="fal fa-book-reader me-1"></i>eBooks</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="https://www.tutorialspoint.com/tutorialslibrary.htm" target="_self"><i class="fal fa-books me-1"></i>Library</a>
					</li>
					<li class="nav-item">
					        <a class="nav-link" href="https://www.tutorialspoint.com/questions/index.php" target="_self"><i class="fal fa-comments-alt me-1"></i> Q/A</a>
					</li>
				</ul>
			</div>
			<div class="navbar-nav d-lg-inline-block nav-login">
			   <a href="https://www.tutorialspoint.com/market/login.asp" class="btn btn-grey-border mb-0"><i class="fal fa-sign-in-alt me-2"></i>Login</a>
			</div>
		</div>
	</nav>
</header>
<main class="bg-light pb-4">
<div class="container-fluid mt-3 px-3 px-xl-3">
<div class="row g-4">
<div class="col-sm-12 col-md-4 col-xl-3 ps-0 pe-0 collapse tutorial-toc" id="tocCollapse">
<div class="card card-body bg-light pt-0">
<div class="mini-logo">
<img src="/perl/images/perl-mini-logo.jpg" alt="Perl Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Perl Basics</li>
<li><a href="/perl/index.htm">Perl - Home</a></li>
<li><a href="/perl/perl_introduction.htm">Perl - Introduction</a></li>
<li><a href="/perl/perl_environment.htm">Perl - Environment</a></li>
<li><a href="/perl/perl_syntax.htm">Perl - Syntax Overview</a></li>
<li><a href="/perl/perl_data_types.htm">Perl - Data Types</a></li>
<li><a href="/perl/perl_variables.htm">Perl - Variables</a></li>
<li><a href="/perl/perl_scalars.htm">Perl - Scalars</a></li>
<li><a href="/perl/perl_arrays.htm">Perl - Arrays</a></li>
<li><a href="/perl/perl_hashes.htm">Perl - Hashes</a></li>
<li><a href="/perl/perl_conditions.htm">Perl - IF...ELSE</a></li>
<li><a href="/perl/perl_loops.htm">Perl - Loops</a></li>
<li><a href="/perl/perl_operators.htm">Perl - Operators</a></li>
<li><a href="/perl/perl_date_time.htm">Perl - Date &amp; Time</a></li>
<li><a href="/perl/perl_subroutines.htm">Perl - Subroutines</a></li>
<li><a href="/perl/perl_references.htm">Perl - References</a></li>
<li><a href="/perl/perl_formats.htm">Perl - Formats</a></li>
<li><a href="/perl/perl_files.htm">Perl - File I/O</a></li>
<li><a href="/perl/perl_directories.htm">Perl - Directories</a></li>
<li><a href="/perl/perl_error_handling.htm">Perl - Error Handling</a></li>
<li><a href="/perl/perl_special_variables.htm">Perl - Special Variables</a></li>
<li><a href="/perl/perl_coding_standard.htm">Perl - Coding Standard</a></li>
<li><a href="/perl/perl_regular_expressions.htm">Perl - Regular Expressions</a></li>
<li><a href="/perl/perl_sending_email.htm">Perl - Sending Email</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Perl Advanced</li>
<li><a href="/perl/perl_socket_programming.htm">Perl - Socket Programming</a></li>
<li><a href="/perl/perl_object_oriented.htm">Perl - Object Oriented</a></li>
<li><a href="/perl/perl_database_access.htm">Perl - Database Access</a></li>
<li><a href="/perl/perl_cgi_programming.htm">Perl - CGI Programming</a></li>
<li><a href="/perl/perl_packages_modules.htm">Perl - Packages &amp; Modules</a></li>
<li><a href="/perl/perl_process_management.htm">Perl - Process Management</a></li>
<li><a href="/perl/perl_embedded_documentation.htm">Perl - Embedded Documentation</a></li>
<li><a href="/perl/perl_function_references.htm">Perl - Functions References</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Perl Useful Resources</li>
<li><a href="/perl/perl_questions_answers.htm">Perl - Questions and Answers</a></li>
<li><a href="/perl/perl_quick_guide.htm">Perl - Quick Guide</a></li>
<li><a href="/perl/perl_useful_resources.htm">Perl - Useful Resources</a></li>
<li><a href="/perl/perl_discussion.htm">Perl - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
<div id="stickyparent" class="d-none d-sm-block">
<div style="height:250px;width:300px;" id="sticky-ad">
<div id="430c9911-782f-495d-88f9-69f58ca8c9a4" class="_ap_apex_ad" >
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("430c9911-782f-495d-88f9-69f58ca8c9a4");
});
</script>
</div>
</div>
</div>
</div>
</div>
<!-- Tutorial ToC Ends Here -->

<!-- Tutorial Content Starts Here -->
<div class="col-sm-12 col-md-8 col-xl-6 rounded-3 tutorial-content" id="mainContent">
<h1>PERL and CGI Tutorial</h1>
<hr />
<div id="google-top-ads">
<div class="top-ad-heading">Advertisements</div>
<div style="text-align:center" class="google-top-ads">
<div id="adp_top_ads" style="text-align:center!important;min-height:90px!important"></div>
<script>
     var adPos = document.getElementById('adp_top_ads');
     var ad_id_720 = "8014640d-fd34-4b2e-9b1b-cc67234a2325";
     var ad_id_650 = "2d1bb2c4-eb72-471d-9c80-1bf5514728c1";
     var ad_id_300 = "75e8929b-e21c-41ad-bca5-5cb2601dc07b";
     var width = window.innerWidth;
     var ad_id = ad_id_720;
     if( width <= 768 ){
        ad_id =  ad_id_300;
     }else if( width <= 1435 ){
        ad_id =  ad_id_650;
     }
     adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
     var adpushup = adpushup || {};
     adpushup.que = adpushup.que || [];
     adpushup.que.push(function() {
     adpushup.triggerAd(ad_id);
     });
</script>
</div>
</div>
<br>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="index.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="index.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<h2>What is CGI ?</h2>
<p>The Common Gateway Interface, or CGI, is a set of standards that define how information is exchanged between the web server and a custom script.</p>
<p>The CGI specs are currently maintained by the NCSA and NCSA defines CGI is as follows &minus;</p>
<p><i>The Common Gateway Interface, or CGI, is a standard for external gateway programs to interface with information servers such as HTTP servers.</i></p> 
<p>The current version is CGI/1.1 and CGI/1.2 is under progress.</p>
<h2>Web Browsing</h2>
<p>To understand the concept of CGI, lets see what happens when we click a hyper link to browse a particular web page or URL.</p>
<ul class="list">
<li><p>Your browser contacts the HTTP web server and demand for the URL ie. filename.</p></li>
<li><p>Web Server will parse the URL and will look for the filename in if it finds that file then sends back to the browser otherwise sends an error message indicating that you have requested a wrong file.</p></li>
<li><p>Web browser takes response from web server and displays either the received file or error message.</p></li>
</ul>
<p>However, it is possible to set up the HTTP server so that whenever a file in a certain directory is requested that file is not sent back; instead it is executed as a program, and whatever that program outputs is sent back for your browser to display. This function is called the Common Gateway Interface or CGI and the programs are called CGI scripts. These CGI programs can be a PERL Script, Shell Script, C or C++ program etc.</p>
<h2>CGI Architecture Diagram</h2>
<img src="/images/cgiarch.gif" alt="CGI Architecture" />
<h2>Web Server Support &amp; Configuration</h2>
<p>Before you proceed with CGI Programming, make sure that your Web Server supports CGI and it is configured to handle CGI Programs. All the CGI Programs be executed by the HTTP server are kept in a pre-configured directory. This directory is called CGI Directory and by convention it is named as /cgi-bin. By convention PERL CGI files will have extention as <b>.cgi</b>.</p>
<h2>First CGI Program</h2>
<!--<p>Here is a simple link which is linked to a CGI script called <a href="/cgi-bin/hello.cgi" target="_blank">hello.cgi</a>. This file is being kept in /cgi-bin/ directory and it has following content. Before running your CGI program make sure you have chage mode of file using <b>chmod 755 hello.cgi</b> UNIX command.</p>-->
<pre class="prettyprint notranslate">
#!/usr/bin/perl

print "Content-type:text/html\r\n\r\n";
print '&lt;html&gt;';
print '&lt;head&gt;';
print '&lt;title&gt;Hello Word - First CGI Program&lt;/title&gt;';
print '&lt;/head&gt;';
print '&lt;body&gt;';
print '&lt;h2&gt;Hello Word! This is my first CGI program&lt;/h2&gt;';
print '&lt;/body&gt;';
print '&lt;/html&gt;';

1;
</pre>
<h3>Output</h3>
<pre class="result notranslate">
Hello Word! This is my first CGI program
</pre>
<!--<p class="alignment">This hello.cgi script is a simple PERL script which is writing its output on STDOUT file ie. screen. There is one important and extra feature available which is first line to be printed <b>Content-type:text/html\r\n\r\n</b>. This line is sent back to the browser and specifiy the content type to be displayed on the browser screen. Now you must have undertood basic concept of CGI and you can write many complicated CGI programs using PERL. This script can interact with any other exertnal system also to exchange information such as RDBMS.</p>--->
<h2>HTTP Header</h2>
<p>The line <b>Content-type:text/html\r\n\r\n</b> is part of HTTP header which is sent to the browser to understand the content.  All the HTTP header will be in the following form</p>
<pre class="result notranslate">
HTTP Field Name: Field Content
</pre>
<p>For Example</p>
<p><font color=Red>Content-type:</font><font color=blue>text/html\r\n\r\n</font></p>
<p>There are few other important HTTP headers which you will use frequently in your CGI Programming.</p>
<table class="table table-bordered">
<tr>
<th>S.No.</th>
<th style="text-align:center;">Header &amp; Description</th>
</tr>
<tr> 
<td>1</td>
<td>
<p><b>Content-type: String</b></p>
<p>A MIME string defining the format of the file being returned. Example is Content-type:text/html</p></td>
</tr>
<tr>
<td>2</td>
<td>
<p><b>Expires: Date String</b></p>
<p>The date the information becomes invalid. This should be used by the browser to decide when a page needs to be refreshed. A valid date string should be in the format 01 Jan 1998 12:00:00 GMT.</p></td>
</tr>
<tr> 
<td>3</td>
<td><p><b>Location: URL String</b></p>
<p>The URL that should be returned instead of the URL requested. You can use this filed to redirect a request to any file.</p></td>
</tr>
<tr>
<td>4</td>
<td>
<p><b>Last-modified: String</b></p>
<p>The date of last modification of the resource.</p></td>
</tr>
<tr> 
<td>5</td>
<td>
<p><b>Content-length: String</b></p>
<p>The length, in bytes, of the data being returned. The browser uses this value to report the estimated download time for a file.</p></td>
</tr>
<tr>
<td>6</td>
<td>
<p><b>Set-Cookie: String</b></p>
<p>Set the cookie passed through the <i>string</i></p></td>
</tr>
</table>
<h2>CGI Environment Variables</h2>
<p>All the CGI program will have access to the following environment variables. These variables play an important role while writing any CGI program.</p>
<table class="table table-bordered">
<tr>
<th>S.No.</th>
<th style="text-align:center;">Variable Name &amp; Description</th>
</tr>
<tr>
<td>1</td>
<td>
<p><b>CONTENT_TYPE</b></p>
<p>The data type of the content. Used when the client is sending attached content to the server. For example file upload etc.</p></td>
</tr>
<tr> 
<td>2</td>
<td>
<p><b>CONTENT_LENGTH</b></p>
<p>The length of the query information. It's available only for POST requests.</p></td> </tr>
<tr>
<td>3</td>
<td>
<p><b>HTTP_COOKIE</b></p>
<p>Return the set cookies in the form of key &amp; value pair.</p></td>
</tr>
<tr> 
<td>4</td>
<td>
<p><b>HTTP_USER_AGENT</b></p>
<p>The User-Agent request-header field contains information about the user agent originating the request. Its name of the web browser.</p></td>
</tr>
<tr>
<td>5</td>
<td>
<p><b>PATH_INFO</b></p>
<p>The path for the CGI script.</p></td>
</tr>
<tr>
<td>6</td>
<td>
<p><b>QUERY_STRING</b></p>
<p>The URL-encoded information that is sent with GET method request.</p></td>
</tr>
<tr>
<td>7</td>
<td>
<p><b>REMOTE_ADDR</b></p>
<p>The IP address of the remote host making the request. This can be useful for logging or for authentication purpose.</p></td>
</tr>
<tr>
<td>8</td>
<td>
<p><b>REMOTE_HOST</b></p>
<p>The fully qualified name of the host making the request. If this information is not available then REMOTE_ADDR can be used to get IR address.</p></td>
</tr>
<tr> 
<td>9</td>
<td>
<p><b>REQUEST_METHOD</b></p>
<p>The method used to make the request. The most common methods are GET and POST.</p></td>
</tr>
<tr>
<td>10</td>
<td>
<p><b>SCRIPT_FILENAME</b></p>
<p>The full path to the CGI script.</p></td>
</tr>
<tr>
<td>11</td>
<td>
<p><b>SCRIPT_NAME</b></p>
<p>The name of the CGI script.</p></td>
</tr>
<tr>
<td>12</td>
<td>
<p><b>SERVER_NAME</b></p>
<p>The server's hostname or IP Address.</p></td>
</tr>
<tr>
<td>13</td>
<td>
<p><b>SERVER_SOFTWARE</b></p>
<p>The name and version of the software the server is running.</p></td>
</tr>
</table>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

print "Content-type: text/html\n\n";
print "&lt;font size=+1&gt;Environment&lt;/font&gt;\n";

foreach (sort keys %ENV) {
   print "&lt;b&gt;$_&lt;/b&gt;: $ENV{$_}&lt;br&gt;\n";
}

1;
</pre>
<h3>Output</h3>
<pre class="result notranslate">
Environment CONTEXT_DOCUMENT_ROOT: 
CONTEXT_PREFIX: 
DOCUMENT_ROOT: 
GATEWAY_INTERFACE: 
GEOIP_ADDR: 
GEOIP_CONTINENT_CODE: 
GEOIP_COUNTRY_CODE: 
GEOIP_COUNTRY_NAME: 
HTTP_ACCEPT: 
HTTP_ACCEPT_ENCODING: 
HTTP_ACCEPT_LANGUAGE: 
HTTP_COOKIE: 
HTTP_HOST: 
HTTP_UPGRADE_INSECURE_REQUESTS: 
HTTP_USER_AGENT: 
HTTP_VIA: 
HTTP_X_FORWARDED_FOR: 
HTTP_X_FORWARDED_PROTO: 
HTTP_X_HOST: 
PATH: 
QUERY_STRING: 
REMOTE_ADDR: 
REMOTE_PORT: 
REQUEST_METHOD: 
REQUEST_SCHEME: 
REQUEST_URI: 
SCRIPT_FILENAME: 
SCRIPT_NAME: 
SCRIPT_URI: 
SCRIPT_URL: 
SERVER_ADDR: 
SERVER_ADMIN: 
SERVER_NAME: 
SERVER_PORT: 
SERVER_PROTOCOL: 
SERVER_SIGNATURE: 
SERVER_SOFTWARE: 
UNIQUE_ID: 
</pre>
<h2>How To Raise a "File Download" Dialog Box ?</h2>
<p>Sometime it is desired that you want to give option where a use will click a link and it will pop up a "File Download" dialogue box to the user in stead of displaying actual content. This is very easy and will be achived through HTTP header.</p>
<p>This HTTP header will be different  from the header mentioned in previous section.</p>
<p>For example,if you want make a <b>FileName</b> file downloadable from a given link then its syntax will be as follows.</p>
<pre class="result notranslate">
#!/usr/bin/perl

# HTTP Header
print "<b>Content-Type:</b>application/octet-stream; name=\"FileName\"\r\n";
print "<b>Content-Disposition:</b> attachment; filename=\"FileName\"\r\n\n";

# Actual File Content will go hear.
open( FILE, "&lt;FileName" );
while(read(FILE, $buffer, 100) ) {
   print("$buffer");
}
</pre>
<h2>GET and POST Methods</h2>
<p>You must have come across many situations when you need to pass some information from your browser to web server and ultimately to your CGI Program. Most frequently browser uses two methods two pass this information to web server. These methods are GET Method and POST Method.</p>
<h2>Passing Information using GET method</h2>
<p>The GET method sends the encoded user information appended to the page request. The page and the encoded information are separated by the ? character as follows &minus;
<b>http://www.test.com/cgi-bin/hello.cgi?key1=value1&amp;key2=value2</b></p>
<p>The GET method is the defualt method to pass information from browser to web server and it produces a long string that appears in your browser's Location:box. Never use the GET method if you have password or other sensitive information to pass to the server. The GET method has size limtation: only 1024 characters can be in a request string.</p>
<p>This information is passed using QUERY_STRING header and will be accessible in your CGI Program through QUERY_STRING environment variable.</p>
<p>You can pass information by simply concatenating key and value pairs along with any URL or you can use HTML &lt;FORM&gt; tags to pass information using GET method.</p>
<h2>Simple URL Example : Get Method</h2>
<p>Here is a simple URL which will pass two values to hello_get.cgi program using GET method.</p>
<p>Below is hello_get.cgi script to handle input given by web browser.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

local ($buffer, @pairs, $pair, $name, $value, %FORM);
# Read in text
$ENV{'REQUEST_METHOD'} =~ tr/a-z/A-Z/;

if ($ENV{'REQUEST_METHOD'} eq "GET") {
   $buffer = $ENV{'QUERY_STRING'};
}

# Split information into name/value pairs
@pairs = split(/&/, $buffer);

foreach $pair (@pairs) {
   ($name, $value) = split(/=/, $pair);
   $value =~ tr/+/ /;
   $value =~ s/%(..)/pack("C", hex($1))/eg;
   $FORM{$name} = $value;
}

$first_name = $FORM{first_name};
$last_name  = $FORM{last_name};

print "Content-type:text/html\r\n\r\n";
print "&lt;html&gt;";
print "&lt;head&gt;";
print "&lt;title&gt;Hello - Second CGI Program&lt;/title&gt;";
print "&lt;/head&gt;";
print "&lt;body&gt;";
print "&lt;h2&gt;Hello $first_name $last_name - Second CGI Program&lt;/h2&gt;";
print "&lt;/body&gt;";
print "&lt;/html&gt;";

1;
</pre>
<h3>Output</h3>
<pre class="result notranslate">
Hello ZARA ALI .....
</pre>
<h2>Simple FORM Example: GET Method</h2>
<p>Here is a simple example which passes two values using HTML FORM and submit button. We are going to use same CGI script hello_get.cgi to handle this input.</p>
<pre class="prettyprint notranslate">
&lt;FORM action = "/cgi-bin/hello_get.cgi" method = "GET"&gt;
   First Name: &lt;input type = "text" name = "first_name"&gt;  &lt;br&gt;

   Last Name: &lt;input type = "text" name = "last_name"&gt;
   &lt;input type = "submit" value = "Submit"&gt;
&lt;/FORM&gt;
</pre>
<p>Here is the actual output of the above form, You enter First and Last Name and then click submit button to see the result.</p>
<pre class="result notranslate">
<FORM action="/cgi-bin/hello_get.cgi" method="GET" target="_blank">
First Name: <input type="text" name="first_name">  <br><br>

Last Name: <input type="text" name="last_name">
<input type="submit" value="Submit">
</FORM>
</pre>
<h2>Passing Information using POST method</h2>
<p>A generally more reliable method  of passing information to a CGI program is the POST method. This packages the information in exactly the same way as GET methods, but instead of sending it as a text string after a ? in the URL it sends it as a separate message. This message comes into the CGI script in the form of the standard input.</p>
<p>Below is hello_post.cgi script to handle input given by web browser. This script will handle GET as well as POST method.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

local ($buffer, @pairs, $pair, $name, $value, %FORM);
# Read in text
$ENV{'REQUEST_METHOD'} =~ tr/a-z/A-Z/;

if ($ENV{'REQUEST_METHOD'} eq "POST") {
   read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
} else {
   $buffer = $ENV{'QUERY_STRING'};
}

# Split information into name/value pairs
@pairs = split(/&/, $buffer);

foreach $pair (@pairs) {
   ($name, $value) = split(/=/, $pair);
   $value =~ tr/+/ /;
   $value =~ s/%(..)/pack("C", hex($1))/eg;
   $FORM{$name} = $value;
}

$first_name = $FORM{first_name};
$last_name  = $FORM{last_name};

print "Content-type:text/html\r\n\r\n";
print "&lt;html&gt;";
print "&lt;head&gt;";
print "&lt;title&gt;Hello - Second CGI Program&lt;/title&gt;";
print "&lt;/head&gt;";
print "&lt;body&gt;";
print "&lt;h2&gt;Hello $first_name $last_name - Second CGI Program&lt;/h2&gt;";
print "&lt;/body&gt;";
print "&lt;/html&gt;";

1;
</pre>
<p>Let us take again same example as above, which passes two values using HTML FORM and submit button. We are going to use CGI script hello_post.cgi to handle this input.</p>
<pre class="result notranslate">
&lt;FORM action = "/cgi-bin/hello_post.cgi" method="POST"&gt;
   First Name: &lt;input type="text" name="first_name"&gt;  &lt;br&gt;

   Last Name: &lt;input type="text" name="last_name"&gt;

   &lt;input type="submit" value="Submit"&gt;
&lt;/FORM&gt;
</pre>
<p>Here is the actual output of the above form, You enter First and Last Name and then click submit button to see the result.</p>
<pre class="result notranslate">
<FORM action="/cgi-bin/hello_post.cgi" method="POST" target="_blank">
First Name: <input type="text" name="first_name">  <br><br>

Last Name: <input type="text" name="last_name">
<input type="submit" value="Submit">
</FORM>
</pre>
<h2>Passing Checkbox Data to CGI Program</h2>
<p>Checkboxes are used when more than one option is required to be selected.</p>
<p>Here is example HTML code for a form with two checkboxes</p>
<pre class="prettyprint notranslate">
&lt;form action = "/cgi-bin/checkbox.cgi" method = "POST" target = "_blank"&gt;
   &lt;input type = "checkbox" name = "maths" value = "on"&gt; Maths
   &lt;input type = "checkbox" name = "physics" value = "on"&gt; Physics
   &lt;input type = "submit" value = "Select Subject"&gt;
&lt;/form&gt;
</pre>
<p>The result of this code is the following form</p>
<pre class="result notranslate">
<form action="/cgi-bin/checkbox.cgi" method="POST" target="_blank">
<input type="checkbox" name="maths" value="on"> Maths
<input type="checkbox" name="physics" value="on"> Physics
<input type="submit" value="Select Subject">
</form>
</pre>
<p>Below is checkbox.cgi script to handle input given by web browser for radio button.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

local ($buffer, @pairs, $pair, $name, $value, %FORM);
# Read in text
$ENV{'REQUEST_METHOD'} =~ tr/a-z/A-Z/;

if ($ENV{'REQUEST_METHOD'} eq "POST") {
   read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
} else {
   $buffer = $ENV{'QUERY_STRING'};
}

# Split information into name/value pairs
@pairs = split(/&/, $buffer);

foreach $pair (@pairs) {
   ($name, $value) = split(/=/, $pair);
   $value =~ tr/+/ /;
   $value =~ s/%(..)/pack("C", hex($1))/eg;
   $FORM{$name} = $value;
}

if( $FORM{maths} ) {
   $maths_flag ="ON";
} else {
   $maths_flag ="OFF";
}

if( $FORM{physics} ) {
   $physics_flag ="ON";
} else {
   $physics_flag ="OFF";
}

print "Content-type:text/html\r\n\r\n";
print "&lt;html&gt;";
print "&lt;head&gt;";
print "&lt;title&gt;Checkbox - Third CGI Program&lt;/title&gt;";
print "&lt;/head&gt;";
print "&lt;body&gt;";
print "&lt;h2&gt; CheckBox Maths is : $maths_flag&lt;/h2&gt;";
print "&lt;h2&gt; CheckBox Physics is : $physics_flag&lt;/h2&gt;";
print "&lt;/body&gt;";
print "&lt;/html&gt;";

1;
</pre>
<h2>Passing Radio Button Data to CGI Program</h2>
<p>Radio Buttons are used when only one option is required to be selected.</p>
<p>Here is example HTML code for a form with two radio button &minus;</p>
<pre class="prettyprint notranslate">
&lt;form action = "/cgi-bin/radiobutton.cgi" method = "POST" target = "_blank"&gt;
   &lt;input type = "radio" name = "subject" value = "maths"&gt; Maths
   &lt;input type = "radio" name = "subject" value = "physics"&gt; Physics
   &lt;input type = "submit" value = "Select Subject"&gt;
&lt;/form&gt;
</pre>
<p>The result of this code is the following form &minus;</p>
<pre class="result notranslate">
<form action="/cgi-bin/radiobutton.cgi" method="POST" target="_blank">
<input type="radio" name="subject" value="Maths"> Maths
<input type="radio" name="subject" value="Physics"> Physics
<input type="submit" value="Select Subject">
</form>
</pre>
<p>Below is radiobutton.cgi script to handle input given by web browser for radio button.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

local ($buffer, @pairs, $pair, $name, $value, %FORM);
# Read in text
$ENV{'REQUEST_METHOD'} =~ tr/a-z/A-Z/;

if ($ENV{'REQUEST_METHOD'} eq "POST") {
   read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
} else {
   $buffer = $ENV{'QUERY_STRING'};
}

# Split information into name/value pairs
@pairs = split(/&/, $buffer);

foreach $pair (@pairs) {
   ($name, $value) = split(/=/, $pair);
   $value =~ tr/+/ /;
   $value =~ s/%(..)/pack("C", hex($1))/eg;
   $FORM{$name} = $value;
}

$subject = $FORM{subject};

print "Content-type:text/html\r\n\r\n";
print "&lt;html&gt;";
print "&lt;head&gt;";
print "&lt;title&gt;Radio - Fourth CGI Program&lt;/title&gt;";
print "&lt;/head&gt;";
print "&lt;body&gt;";
print "&lt;h2&gt; Selected Subject is $subject&lt;/h2&gt;";
print "&lt;/body&gt;";
print "&lt;/html&gt;";

1;
</pre>
<h2>Passing Text Area Data to CGI Program</h2>
<p>TEXTAREA element is used when multiline text has to be passed to the CGI Program.</p>
<p>Here is example HTML code for a form with a TEXTAREA box &minus;</p>
<pre class="prettyprint notranslate">
&lt;form action = "/cgi-bin/textarea.cgi" method = "POST" target = "_blank"&gt;
   &lt;textarea name = "textcontent" cols = 40 rows = 4&gt;
      Type your text here...
   &lt;/textarea&gt;
   &lt;input type = "submit" value = "Submit"&gt;
&lt;/form&gt;
</pre>
<p>The result of this code is the following form &minus;</p>
<pre class="result notranslate">
<form action="/cgi-bin/textarea.cgi" method="POST" target="_blank">
<textarea name="textcontent" cols=40 rows=4>Type your text here...</textarea>
<input type="submit" value="Submit">
</form>
</pre>
<p>Below is textarea.cgi script to handle input given by web browser.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

local ($buffer, @pairs, $pair, $name, $value, %FORM);
# Read in text
$ENV{'REQUEST_METHOD'} =~ tr/a-z/A-Z/;

if ($ENV{'REQUEST_METHOD'} eq "POST") {
   read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
} else {
   $buffer = $ENV{'QUERY_STRING'};
}

# Split information into name/value pairs
@pairs = split(/&amp;/, $buffer);

foreach $pair (@pairs) {
   ($name, $value) = split(/=/, $pair);
   $value =~ tr/+/ /;
   $value =~ s/%(..)/pack("C", hex($1))/eg;
   $FORM{$name} = $value;
}

$text_content = $FORM{textcontent};

print "Content-type:text/html\r\n\r\n";
print "&lt;html&gt;";
print "&lt;head&gt;";
print "&lt;title&gt;Text Area - Fifth CGI Program&lt;/title&gt;";
print "&lt;/head&gt;";
print "&lt;body&gt;";
print "&lt;h2&gt; Entered Text Content is $text_content&lt;/h2&gt;";
print "&lt;/body&gt;";
print "&lt;/html&gt;";

1;
</pre>
<h2>Passing Drop Down Box Data to CGI Program</h2>
<p>Drop Down Box is used when we have many options available but only one or two will be selected.</p>
<p>Here is example HTML code for a form with one drop down box</p>
<pre class="prettyprint notranslate">
&lt;form action = "/cgi-bin/dropdown.cgi" method = "POST" target = "_blank"&gt;
   &lt;select name = "dropdown"&gt;
      &lt;option value = "Maths" selected&gt;Maths&lt;/option&gt;
      &lt;option value = "Physics"&gt;Physics&lt;/option&gt;
   &lt;/select&gt;
   &lt;input type = "submit" value = "Submit"&gt;
&lt;/form&gt;
</pre>
<p>The result of this code is the following form &minus;</p>
<pre class="result notranslate">
<form action="/cgi-bin/dropdown.cgi" method="POST" target="_blank">
<select name="dropdown">
<option value="Maths" selected>Maths</option>
<option value="Physics">Physics</option>
</select>
<input type="submit" value="Submit">
</form>
</pre>
<p>Below is dropdown.cgi script to handle input given by web browser.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

local ($buffer, @pairs, $pair, $name, $value, %FORM);
# Read in text
$ENV{'REQUEST_METHOD'} =~ tr/a-z/A-Z/;

if ($ENV{'REQUEST_METHOD'} eq "POST") {
   read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
} else {
   $buffer = $ENV{'QUERY_STRING'};
}

# Split information into name/value pairs
@pairs = split(/&/, $buffer);

foreach $pair (@pairs) {
   ($name, $value) = split(/=/, $pair);
   $value =~ tr/+/ /;
   $value =~ s/%(..)/pack("C", hex($1))/eg;
   $FORM{$name} = $value;
}

$subject = $FORM{dropdown};

print "Content-type:text/html\r\n\r\n";
print "&lt;html&gt;";
print "&lt;head&gt;";
print "&lt;title&gt;Dropdown Box - Sixth CGI Program&lt;/title&gt;";
print "&lt;/head&gt;";
print "&lt;body&gt;";
print "&lt;h2&gt; Selected Subject is $subject&lt;/h2&gt;";
print "&lt;/body&gt;";
print "&lt;/html&gt;";

1;
</pre>
<h2>Using Cookies in CGI</h2>
<p>HTTP protocol is a stateless protocol. But for a commercial website it is required to maintain session information among different pages. For example one user registration ends after completing many pages. But how to maintain user's session information across all the web pages.</p>
<p>In many situations, using cookies is the most efficient method of remembering and tracking preferences, purchases, commissions, and other information required for better visitor experience or site statistics.</p>
<h2>How It Works</h2>
<p>Your server sends some data to the visitor's browser in the form of a cookie. The browser may accept the cookie. If it does, it is stored as a plain text record on the visitor's hard drive. Now, when the visitor arrives at another page on your site, the cookie is available for retrieval. Once retrieved, your server knows/remembers what was stored.</p>
<p>Cookies are a plain text data record of 5 variable-length fields &minus;</p>
<ul class="list">
<li><p><b>Expires</b> &minus; The date the cookie will expire. If this is blank, the cookie will expire when the visitor quits the browser.</p></li>
<li><p><b>Domain</b> &minus; The domain name of your site.</p></li>
<li><p><b>Path</b> &minus; The path to the directory or web page that set the cookie. This may be blank if you want to retrieve the cookie from any directory or page.</p></li>
<li><p><b>Secure</b> &minus; If this field contains the word "secure" then the cookie may only be retrieved with a secure server. If this field is blank, no such restriction exists.</p></li>
<li><p><b>Name=Value</b> &minus; Cookies are set and retrviewed in the form of key and value pairs.</p></li>
</ul>
<h2>Setting up Cookies</h2>
<p>This is very easy to send cookies to browser. These cookies will be sent along with HTTP Header. Assuming you want to set UserID and Password as cookies. So it will be done as follows &minus;</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl

print "Set-Cookie:UserID=XYZ;\n";
print "Set-Cookie:Password=XYZ123;\n";
print "Set-Cookie:Expires=Tuesday, 31-Dec-2007 23:12:40 GMT";\n";
print "Set-Cookie:Domain=www.tutorialspoint.com;\n";
print "Set-Cookie:Path=/perl;\n";
print "Content-type:text/html\r\n\r\n";
...........Rest of the HTML Content....
</pre>
<p>From this example you must have understood how to set cookies. We use <b>Set-Cookie</b> HTTP header to set cookies.</p>
<p>Here it is optional to set cookies attributes like Expires, Domain, and Path. It is notable that cookies are set before sending magic line <b>"Content-type:text/html\r\n\r\n</b>.</p>
<h2>Retrieving Cookies</h2>
<p>This is very easy to retrieve all the set cookies. Cookies are stored in CGI environment variable HTTP_COOKIE and they will have following form.</p>
<pre class="result notranslate">
key1=value1;key2=value2;key3=value3....
</pre>
<p>Here is an example of how to retrieving cookies.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/perl
$rcvd_cookies = $ENV{'HTTP_COOKIE'};
@cookies = split /;/, $rcvd_cookies;

foreach $cookie ( @cookies ) {
   ($key, $val) = split(/=/, $cookie); # splits on the first =.
   $key =~ s/^\s+//;
   $val =~ s/^\s+//;
   $key =~ s/\s+$//;
   $val =~ s/\s+$//;
	
   if( $key eq "UserID" ) {
      $user_id = $val;
   } elsif($key eq "Password") {
      $password = $val;
   }
}

print "User ID  = $user_id\n";
print "Password = $password\n";

This will produce following result
User ID = XYZ
Password = XYZ123
</pre>
<h2>CGI Modules and Libraries</h2>
<p>You will find many built-in modules over the internet which provide you direct functions to use in your CGI program. Following are the important once.</p>
<ul class="list">
<li><p><a href="http://search.cpan.org/src/LDS/CGI.pm-3.25/cgi_docs.html" target="_blank">CGI Module</a></p></li>
<li><p><a href="http://cgi-lib.berkeley.edu/"  target="_blank">Berkeley cgi-lib.pl</a></p></li>
</ul>
<div class="d-flex justify-content-between border-bottom border-top py-2" id="bottom_navigation">
<a href="index.htm" class="pre-btn"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
<a id="print-page" href="#" class="pre-btn d-none d-sm-block"><i class="fal fa-print"></i> Print Page</a>
<a href="index.htm" class="nxt-btn">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
			<div class="google-bottom-ads" id="google-bottom-ads">
				<div>Advertisements</div>
				<div>
					<div id="adp_bottom_ads"></div>
					<script>
						var adPos = document.getElementById('adp_bottom_ads');
						var mobile_ad_id = "6d621d7e-9531-4f26-810f-68af67dc6366";
						var desktop_ad_id = "4951d1d6-24d4-4a31-afb7-2c22c489eae1";
						var adpushup = adpushup || {};
						adpushup.que = adpushup.que || [];
						adpushup.que.push(function() {
							var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;
							adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
							adpushup.triggerAd(ad_id);
						});
					</script>
				</div>
			</div>
		</div>
	<!-- Tutorial Content Ends Here -->

	<!-- Right Column Starts Here -->
	<div class="col-sm-6 col-md-3 col-xl-3" id="google-right-ads">
		<div class="data-sticky">
			<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;min-height:250px!important">
				<div id="f0f6cff6-393d-4170-b63a-d9ff06ca9f25" class="_ap_apex_ad">
					<script>
						if( window.innerWidth > 768 ){
						   var adpushup = adpushup || {};
						   adpushup.que = adpushup.que || [];
						   adpushup.que.push(function() {
						   adpushup.triggerAd("f0f6cff6-393d-4170-b63a-d9ff06ca9f25");
						   });
						}
					</script>
				</div>
			</div>
			<div class="google-right-ad" style="margin-top:16px;min-height:250px!important">
				<div id="5c0affd5-724a-475c-bfcd-cecbc7660c36" class="_ap_apex_ad">
					<script>
						if( window.innerWidth > 768 ){
						   var adpushup = adpushup || {};
						   adpushup.que = adpushup.que || [];
						   adpushup.que.push(function() {
						   adpushup.triggerAd("5c0affd5-724a-475c-bfcd-cecbc7660c36");
						   });
						}
					</script>
				</div>
			</div>
			<div class="google-right-ad" style="margin-top:16px;margin-bottom:15px;min-height:600px!important">
				<div id="8f8814c2-d64c-4d26-9cb9-543653c0b48f" class="_ap_apex_ad">
					<script>
						if( window.innerWidth > 768 ){
						   var adpushup = adpushup || {};
						   adpushup.que = adpushup.que || [];
						   adpushup.que.push(function() {
						   adpushup.triggerAd("8f8814c2-d64c-4d26-9cb9-543653c0b48f");
						   });
						}
					</script>
				</div>
			</div>
			<!-- Right Column Ends Here -->
		</div>
	</div>
</div>
</div>
</main>

<footer class="py-3 card navbar-dark border-top" id="footer">
	<div class="container">
		<div class="row g-4">
			<div class="col-lg-12 text-center">
				<a class="me-0 pb-4" href="https://www.tutorialspoint.com">
					<img class="light-mode-item h-100px" src="/static/images/logo-color-footer.png" alt="Tutorials Point" />
					<img class="dark-mode-item h-100px" src="/static/images/logo-footer-b.png" alt="Tutorials Point" />
				</a>
				<ul class="nav justify-content-center py-3 mt-md-0 ">
					<li class="nav-item"><a class="nav-link fw-bold" href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
					<li class="nav-item"><a class="nav-link fw-bold" href="/about/return_refund_policy.htm"> <i class="fal fa-check"></i> Refund Policy</a></li>
					<li class="nav-item"><a class="nav-link fw-bold" href="/about/about_terms_of_use.htm"><i class="fal fa-check"></i> Terms of use</a></li>
					<li class="nav-item"><a class="nav-link fw-bold" href="/about/about_privacy.htm"> <i class="fal fa-shield-check"></i> Privacy Policy</a></li>
					<li class="nav-item"><a class="nav-link fw-bold" href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
					<li class="nav-item"><a class="nav-link fw-bold" href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
				</ul>
				<p class="small">© Copyright 2022. All Rights Reserved.</p>
			</div>
			<div id="privacy-banner">
				<div>
					<p>We make use of cookies to improve our user experience. By using this website, you agree with our Cookies Policy.
						<a id="banner-accept" href="#">Agree</a>
						<a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
					</p>
				</div>
			</div>
		</div>
	</div>
</footer>

<div class="back-top">
<i class="fal fa-angle-up position-absolute top-50 start-50 translate-middle"></i>
</div>
<script src="/static/js/script-min.js?v=119"></script>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-6"></script>
<script>
     window.dataLayer = window.dataLayer || [];
     function gtag(){dataLayer.push(arguments);}
     gtag('js', new Date());
     gtag('config', 'UA-232293-6');
</script>
</body>
</html>
